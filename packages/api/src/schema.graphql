type User {
  id: ID!
  email: String!
  name: String!
  surname: String!
  avatar: String!
  createdAt: String!
  updatedAt: String!
}

type Session {
  id: ID!
  accessToken: String!
  refreshToken: String!
  createdAt: String!
  updatedAt: String!
}

type Dialog {
  id: ID!
  users: [User]!
  dialogProps: [DialogProps]!
  lastMessage: String!
  lastMessageDate: String!
}

type DialogProps {
  id: ID!
  user: User!
  userRole: String!
  unreadMessages: Int!
  lastMessageStatus: MESSAGE_STATUSES!
}

type UserAndSession {
  user: User!
  session: Session!
}

type Query {
  user(email: String!): User!
  dialogs(userId: String!): [Dialog]!
}

# Mutations and inputs

input SignUpInput {
  email: String!
  name: String!
  surname: String!
  password: String!
}

input SignInInput {
  email: String!
  password: String!
}

input CreateDialogInput {
  userId: String!
  role: DIALOG_USER_ROLES!
}

type Mutation {
  signUp(input: SignUpInput!): UserAndSession!
  signIn(input: SignInInput!): UserAndSession!
  refreshSession(refreshToken: String!): Session!
  createDialog(input: [CreateDialogInput]!): Dialog!
}

enum DIALOG_USER_ROLES {
  ADMIN
  USER
}

enum MESSAGE_STATUSES {
  SENDED
  RECIVED
  READED
}
